# My local PATH
export PATH=$HOME/.local/bin:$PATH
export EDITOR=vim

if [[ -f "$HOME/.dotfiles/scripts/.functions" ]]; then
  source "$HOME/.dotfiles/scripts/.functions"
fi

if [[ -f "$HOME/.dotfiles/scripts/dockerfiles/.bashrc.docker" ]]; then
  source "$HOME/.dotfiles/scripts/dockerfiles/.bashrc.docker"
fi

# Mapping numpad into zsh
# From http://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work
# Answer by Gabriel Hautclocq
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[On" "."
bindkey -s "^[OM" "^M"
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ol" "+"
bindkey -s "^[OS" "-"
bindkey -s "^[OR" "*"
bindkey -s "^[OQ" "/"

# short pdflatex with output in folder
# alias pdflatex="pdflatex -output-directory=output"

# make rm prompt before delete
# alias rm="/bin/rm -v"

# setup Solarized dircolors plugin for zsh
# https://github.com/joel-porquet/zsh-dircolors-solarized
# setupsolarized
if [ -f $HOME/.zsh-dircolors.config ]; then
    rm -f $HOME/.zsh-dircolors.config
fi
echo "dircolors.256dark" > $HOME/.zsh-dircolors.config

# Open with run :PlugInstall
alias vimp="vim +PlugInstall +q"

# upgrade debian
alias deb-upgrade="sudo apt update && sudo apt upgrade"

# grep option
alias grep="grep --color=always"
# ack option
alias ack="ack --color"


# kill process with pid
alias killp="kill -KILL"


# Run tmux when start computer
# tmux attach > /dev/null 2>&1 || tmux new > /dev/null 2>&1

# NVM
# Please install nvm before: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Cheat
export DEFAULT_CHEAT_DIR=$HOME/.dotfiles/cheat
export CHEATCOLORS=true

_cmpl_cheat() {
	reply=($(cheat -l | cut -d' ' -f1))
}
compctl -K _cmpl_cheat cheat

# Pretty Print
alias pretty-json='python -m json.tool | pygmentize -l javascript'
function code-color {
   pygmentize -l $1
}

# Docker

function docker-bash {
    docker exec -it $1 /bin/bash
}

# --------------------------------------------------------
#
# For Mac OS
#
# --------------------------------------------------------

export PATH=$PATH:/Library/TeX/texbin
export PATH=$PATH:/usr/local/share/dotnet

export PATH=$PATH:$HOME/Software/flutter/bin
export PATH=$PATH:$HOME/Software/dart-sdk/bin
export PATH="$PATH":"$HOME/.pub-cache/bin"

# dotnet config
export PATH="$PATH:$HOME/.dotnet/tools"


alias obs='/Applications/OBS.app/Contents/MacOS/OBS'

# for mac
# https://gist.github.com/BretFisher/6f688dde0122399efdca5a9d26100437
# then add alias to your ~/.bash_profile or ~/.bashrc or ~/.zshrc etc.
alias pcat='pygmentize -f terminal256 -O style=native -g'

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

function sync-upstream {
    git checkout $1 && git fetch upstream && git merge upstream/$1
} 

function checkout-pr {
  # Ref: https://www.dotnetthailand.com/programming-cookbook/git/git-checkout#checkingoutaprbranchforcodingreview
  # Example: checkout-pr runyasak dotnetthailand.github.io fix/support-tablet-device
  if [[ "$1" == "-h" ]]; then
    echo "Index 1 = [REFERENCE_NAME]"
    echo "Index 2 = [REPOSITORY]"
    echo "Index 3 = [TARGET_BRANCH]"
  else
    git remote add $1 https://github.com/$1/$2 && git fetch $1 && git checkout $1/$3
  fi
}

# .net 6
# export DOTNET_ROOT=$HOME/dotnet
# export PATH=$PATH:$HOME/dotnet
alias dotnet6='$HOME/dotnet/dotnet'

## Gits-sizer
export PATH=$PATH:$HOME/git-sizer

## WSL2

# Open VS code from WSL
alias code='/mnt/c/Users/mildronize/AppData/Local/Programs/Microsoft\ VS\ Code/bin/code'


#########################################################################################
#
#              Sharing the same `ssh-agent` among multiple login sessions
# 
#########################################################################################

# Ref: https://superuser.com/questions/141044/sharing-the-same-ssh-agent-among-multiple-login-sessions

function sshagent_findsockets {
    find /tmp -uid $(id -u) -type s -name agent.\* 2>/dev/null
}

function sshagent_testsocket {
    if [ ! -x "$(which ssh-add)" ] ; then
        echo "ssh-add is not available; agent testing aborted"
        return 1
    fi

    if [ X"$1" != X ] ; then
        export SSH_AUTH_SOCK=$1
    fi

    if [ X"$SSH_AUTH_SOCK" = X ] ; then
        return 2
    fi

    if [ -S $SSH_AUTH_SOCK ] ; then
        ssh-add -l > /dev/null
        if [ $? = 2 ] ; then
            echo "Socket $SSH_AUTH_SOCK is dead!  Deleting!"
            rm -f $SSH_AUTH_SOCK
            return 4
        else
            echo "Found ssh-agent $SSH_AUTH_SOCK"
            return 0
        fi
    else
        echo "$SSH_AUTH_SOCK is not a socket!"
        return 3
    fi
}

function sshagent_init {
    # ssh agent sockets can be attached to a ssh daemon process or an
    # ssh-agent process.

    AGENTFOUND=0

    # Attempt to find and use the ssh-agent in the current environment
    if sshagent_testsocket ; then AGENTFOUND=1 ; fi

    # If there is no agent in the environment, search /tmp for
    # possible agents to reuse before starting a fresh ssh-agent
    # process.
    if [ $AGENTFOUND = 0 ] ; then
        for agentsocket in $(sshagent_findsockets) ; do
            if [ $AGENTFOUND != 0 ] ; then break ; fi
            if sshagent_testsocket $agentsocket ; then AGENTFOUND=1 ; fi
        done
    fi

    # If at this point we still haven't located an agent, it's time to
    # start a new one
    if [ $AGENTFOUND = 0 ] ; then
        eval `ssh-agent`
    fi

    # Clean up
    unset AGENTFOUND
    unset agentsocket

    # Finally, show what keys are currently in the agent
    ssh-add -l
}

alias ssh-attach="sshagent_init"

#########################################################################################
#
#                                                End Block
#  
#########################################################################################
